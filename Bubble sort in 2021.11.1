//顺序结构冒泡排序
#include<iostream>
#include<stdlib.h>
using namespace std;
#define max 100

typedef struct
{
	int data[max];
	int length;
}Sqlist;

//销毁线性表
void Destroylist (Sqlist *L)
{
	free(L);
}
//依次输出线性表
void ListTraverse(Sqlist L) 
{
	cout<<"List:";
	if(L.length) 
	{	
		int i=0;
		for(i;i<L.length;i++)
			cout<<" "<<L.data[i];
	}
	cout<<endl;
}
//冒泡排序 
void listSort(Sqlist *L)
{
	int n=L->length;
	bool flag=false;
	while(!flag)
	{
		flag=true;
		for(int i=0;i<n-1;i++)
		{
			if(L->data[i]>L->data[i+1])
			{
				swap(L->data[i],L->data[i+1]);
				flag=false;
			}
		}
		n--;
	}
}

int main()
{
	int n;
	cout<<"请输入元素总个数："<<endl;
	cin>>n;
	printf("请输入%d个元素：\n",n);
	Sqlist L;
	L.length=0;
	for(int i=0;i<n;i++)
	{
		cin>>L.data[i];
		L.length++;
	}
	listSort(&L);
	cout<<"排序后："<<endl;
	ListTraverse(L);
	Destroylist(&L); 	
	return 0;
}
