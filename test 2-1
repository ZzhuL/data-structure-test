/*2．设线性表A、B，元素值为整型，且递减有序，编写函数，实现下列功能：对采用顺序结构和链式结构2种存储结构，
要求在A的空间上构成一个新线性表C，其元素为A和B元素的并集，且表C中的元素值递减有序（互不相同）。*/
//顺序结构 
#include<iostream>
#include<stdlib.h>
using namespace std;
#define max 100

typedef struct
{
	int data[max];
	int length;
}Sqlist;

//销毁线性表
void Destroylist (Sqlist *L)
{
	free(L);
}
//依次输出线性表
void ListTraverse(Sqlist L) 
{
	cout<<"List:";
	if(L.length) 
	{	
		int i=0;
		for(i;i<L.length;i++)
			cout<<" "<<L.data[i];
	}
	cout<<endl;
}
//冒泡排序 
void listSort(Sqlist *L)
{
	int n=L->length;
	bool flag=false;
	while(!flag)
	{
		flag=true;
		for(int i=0;i<n-1;i++)
		{
			if(L->data[i] < L->data[i+1])
			{
				swap(L->data[i],L->data[i+1]);
				flag=false;
			}
		}
		n--;
	}
}
void DeleteElem(Sqlist *L)			//删除重复元素 
{
	
	for(int i=0;i<L->length-1;i++)
	{
		int t=i+1;
		int cnt=0;
		while(L->data[i]==L->data[t])
		{
			cnt++;
			t++;
		}
		L->length=L->length-cnt;
		for(int j=i+1;j<L->lengt;j++)
			L->data[j]=L->data[j+cnt];
	}
}
int main()
{
	int n1,n2;
	cout<<"请输入A中元素总个数："<<endl;
	cin>>n1;
	printf("请输入A中%d个元素：\n",n1);
	Sqlist L1,L2;
	L1.length=0;
	L2.length=0;
	for(int i=0;i<n1;i++)
	{
		cin>>L1.data[i];
		L1.length++;
	}
	cout<<"请输入B中元素总个数："<<endl;
	cin>>n2;
	printf("请输入B中%d个元素：\n",n2);
	for(int i=0;i<n2;i++)
	{
		cin>>L2.data[i];
		L2.length++;
	}
	for(int i=n1;i<n1+n2;i++)
	{
		L1.data[i]=L2.data[i-n1];
		L1.length++;
	}
	listSort(&L1);
	DeleteElem(&L1);
	cout<<"合并后："<<endl;
	ListTraverse(L1);
	Destroylist(&L2); 
	Destroylist(&L1); 	
	return 0;
}
